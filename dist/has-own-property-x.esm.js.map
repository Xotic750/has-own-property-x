{"version":3,"sources":["../src/has-own-property-x.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,aAAP,MAA0B,mBAA1B;AAEA,IAAM,GAAG,GAAG,GAAG,cAAf;AAEA;;;;;;;;;;;AAUA,eAAe,SAAS,cAAT,CAAwB,MAAxB,EAAgC,QAAhC,EAA0C;AACvD,SAAO,GAAG,CAAC,IAAJ,CAAS,QAAQ,CAAC,MAAD,CAAjB,EAA2B,aAAa,CAAC,QAAD,CAAxC,CAAP;AACD","file":"has-own-property-x.esm.js","sourcesContent":["import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\n\nconst hop = {}.hasOwnProperty;\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|Symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nexport default function hasOwnProperty(object, property) {\n  return hop.call(toObject(object), toPropertyKey(property));\n}\n"]}